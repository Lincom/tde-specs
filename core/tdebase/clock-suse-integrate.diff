Index: kcontrol/clock/tzone.cpp
===================================================================
--- kcontrol/clock/tzone.cpp.orig
+++ kcontrol/clock/tzone.cpp
@@ -27,12 +27,16 @@
 
 #include <tqlabel.h>
 #include <tqfile.h>
+#include <tqregexp.h>
 
 #include <kdebug.h>
 #include <klocale.h>
 #include <kmessagebox.h>
 #include <kdialog.h>
 #include <kio/netaccess.h>
+#include <kprocess.h>
+#include <ksavefile.h>
+#include <kstandarddirs.h>
 
 //#include "xpm/world.xpm"
 #include "tzone.h"
@@ -55,6 +59,8 @@ Tzone::Tzone(TQWidget * parent, const ch
     connect( tzonelist, TQT_SIGNAL(selectionChanged()), TQT_SLOT(handleZoneChange()) );
 
     m_local = new TQLabel(this);
+    
+    setupSuseTimezone();
 
     load();
 
@@ -158,28 +164,36 @@ void Tzone::save()
 
         TQString val = selectedzone;
 #else
-        TQFile fTimezoneFile("/etc/timezone");
+        TQString tz = "/usr/share/zoneinfo/" + selectedzone;
+        
+        writeSuseTimezone( selectedzone );
 
-        if (fTimezoneFile.open(IO_WriteOnly | IO_Truncate) )
+        if( !KStandardDirs::findExe( "zic" ).isEmpty())
         {
-            TQTextStream t(&fTimezoneFile);
-            t << selectedzone;
-            fTimezoneFile.close();
+            KProcess proc;
+            proc << "zic" << "-l" << selectedzone;
+            proc.start( KProcess::Block );
         }
+		else
+        {
+            TQFile fTimezoneFile("/etc/timezone");
+            if (fTimezoneFile.open(IO_WriteOnly | IO_Truncate) )
+            {
+                TQTextStream t(&fTimezoneFile);
+                t << selectedzone;
+                fTimezoneFile.close();
+            }
 
-        TQString tz = "/usr/share/zoneinfo/" + selectedzone;
-
-        kdDebug() << "Set time zone " << tz << endl;
-
-	if (!TQFile::remove("/etc/localtime"))
-	{
-		//After the KDE 3.2 release, need to add an error message
-	}
-	else
-		if (!KIO::NetAccess::file_copy(KURL(tz),KURL("/etc/localtime")))
-			KMessageBox::error( 0,  i18n("Error setting new timezone."),
-                        		    i18n("Timezone Error"));
-
+			if (!TQFile::remove("/etc/localtime"))
+			{
+				//After the KDE 3.2 release, need to add an error message
+			}
+			else {
+				if (!KIO::NetAccess::file_copy(KURL(tz),KURL("/etc/localtime")))
+					KMessageBox::error( 0,  i18n("Error setting new timezone."),
+				                		    i18n("Timezone Error"));
+            }
+		}
         TQString val = ":" + tz;
 #endif // !USE_SOLARIS
 
@@ -198,3 +212,58 @@ void Tzone::save()
 
     currentZone();
 }
+
+// read the configured timezone from /etc/sysconfig/clock
+// and simply set it as $TZ, KDE code then will take it as the timezone
+void Tzone::setupSuseTimezone()
+{
+    TQFile f( "/etc/sysconfig/clock" );
+    if( !f.open( IO_ReadOnly ))
+        return;
+    TQTextStream str( &f );
+    while( !str.atEnd())
+    {
+        TQString line = str.readLine();
+        if( line.startsWith( "TIMEZONE=" ))
+        {
+            TQRegExp r( "\\s*TIMEZONE=\"(.*)\"\\s*" );
+            if( r.exactMatch( line ))
+            {
+                TQString tz = r.cap( 1 );
+                setenv( "TZ", tz.ascii(), 1 );
+            }
+        }
+    }
+}
+
+void Tzone::writeSuseTimezone( TQString zone )
+{
+    TQFile f( "/etc/sysconfig/clock" );
+    if( !f.open( IO_ReadOnly ))
+        return;
+    KSaveFile out( "/etc/sysconfig/clock", 0644 );
+    TQFile* fout = out.file();
+    if( fout == NULL )
+        return;
+    TQTextStream str( &f );
+    TQTextStream strout( fout );
+    while( !str.atEnd())
+    {
+        TQString line = str.readLine();
+        if( line.startsWith( "TIMEZONE=" ))
+        {
+            TQRegExp r( "\\s*TIMEZONE=\"(.*)\"\\s*" );
+            if( r.exactMatch( line ))
+            {
+                TQString tz = r.cap( 1 );
+                if( tz == zone ) // not changed, abort
+                {
+                    out.abort();
+                    return;
+                }
+                line = "TIMEZONE=\"" + zone + "\"";
+            }
+        }
+        strout << line << '\n';
+    }
+}
Index: kcontrol/clock/tzone.h
===================================================================
--- kcontrol/clock/tzone.h.orig
+++ kcontrol/clock/tzone.h
@@ -47,6 +47,8 @@ protected slots:
 
 private:
   void currentZone();
+  void setupSuseTimezone();
+  void writeSuseTimezone( TQString timezone );
   KTimezones m_zoneDb;
   TQLabel *m_local;
   KTimezoneWidget *tzonelist;
Index: kcontrol/clock/dtime.h
===================================================================
--- kcontrol/clock/dtime.h.orig
+++ kcontrol/clock/dtime.h
@@ -66,6 +66,9 @@ signals:
   void	timeout();
   void	set_time();
   void	changeDate(TQDate);
+#if 1
+  void	configureTimeServer();
+#endif
 
 private:
   void	findNTPutility();
@@ -73,7 +76,11 @@ private:
 
   TQWidget*	privateLayoutWidget;
   TQCheckBox	*setDateTimeAuto;
+#if 1
+  TQPushButton	*timeServerConfigure;
+#else
   TQComboBox	*timeServerList;
+#endif
 
   KDatePicker	*cal;
   TQComboBox	*month;
Index: kcontrol/clock/dtime.cpp
===================================================================
--- kcontrol/clock/dtime.cpp.orig
+++ kcontrol/clock/dtime.cpp
@@ -38,6 +38,7 @@
 #include <kmessagebox.h>
 #include <kdialog.h>
 #include <kconfig.h>
+#include <kstandarddirs.h>
 
 #include "dtime.h"
 #include "dtime.moc"
@@ -73,6 +74,19 @@ Dtime::Dtime(TQWidget * parent, const ch
   connect(setDateTimeAuto, TQT_SIGNAL(toggled(bool)), this, TQT_SLOT(serverTimeCheck()));
   connect(setDateTimeAuto, TQT_SIGNAL(toggled(bool)), TQT_SLOT(configChanged()));
   layout1->addWidget( setDateTimeAuto );
+  
+#if 1
+  // simply add a pushbutton that'll invoke the yast module
+  ntpUtility = KStandardDirs::findExe( "rcntp");
+  timeServerConfigure = new TQPushButton( i18n( "Configure" ), privateLayoutWidget, "timeServerConfigure" );
+  connect(timeServerConfigure, TQT_SIGNAL(clicked()), TQT_SLOT(configChanged()));
+  connect(timeServerConfigure, TQT_SIGNAL(clicked()), TQT_SLOT(configureTimeServer()));
+  connect(setDateTimeAuto, TQT_SIGNAL(toggled(bool)), timeServerConfigure, TQT_SLOT(setEnabled(bool)));
+  timeServerConfigure->setEnabled(false);
+  layout1->addWidget( timeServerConfigure );
+  if( ntpUtility.isEmpty())
+    privateLayoutWidget->hide();
+#else
 
   timeServerList = new TQComboBox( false, privateLayoutWidget, "timeServerList" );
   connect(timeServerList, TQT_SIGNAL(activated(int)), TQT_SLOT(configChanged()));
@@ -82,6 +96,7 @@ Dtime::Dtime(TQWidget * parent, const ch
   timeServerList->setEditable(true);
   layout1->addWidget( timeServerList );
   findNTPutility();
+#endif
 
   // Date box
   TQGroupBox* dateBox = new TQGroupBox( this, "dateBox" );
@@ -179,7 +194,11 @@ Dtime::Dtime(TQWidget * parent, const ch
       hour->setEnabled(false);
       minute->setEnabled(false);
       second->setEnabled(false);
+#if 1
+      timeServerConfigure->setEnabled(false);
+#else
       timeServerList->setEnabled(false);
+#endif
       setDateTimeAuto->setEnabled(false);
     }
   kclock->setEnabled(false);
@@ -241,6 +260,15 @@ void Dtime::configChanged(){
 void Dtime::load()
 {
   KConfig config("kcmclockrc", true, false);
+#if 1
+  if( !ntpUtility.isEmpty())
+  {
+    KProcess proc;
+    proc << ntpUtility << "status";
+    proc.start( KProcess::Block );
+    setDateTimeAuto->setChecked( proc.exitStatus() == 0 );
+  }
+#else
   config.setGroup("NTP");
   timeServerList->insertStringList(TQStringList::split(',', config.readEntry("servers",
     i18n("Public Time Server (pool.ntp.org),\
@@ -249,6 +277,7 @@ europe.pool.ntp.org,\
 north-america.pool.ntp.org,\
 oceania.pool.ntp.org"))));
   setDateTimeAuto->setChecked(config.readBoolEntry("enabled", false));
+#endif
 
   // Reset to the current date and time
   time = TQTime::currentTime();
@@ -264,6 +293,7 @@ oceania.pool.ntp.org"))));
 void Dtime::save()
 {
   KConfig config("kcmclockrc", false, false);
+#if 0
   config.setGroup("NTP");
 
   // Save the order, but don't duplicate!
@@ -301,7 +331,9 @@ void Dtime::save()
         kdDebug() << "Set date from time server " << timeServer.latin1() << " success!" << endl;
     }
   }
-  else {
+  else
+#endif
+       {
     // User time setting
     KProcess c_proc;
 
@@ -356,6 +388,13 @@ void Dtime::timeout()
   kclock->setTime( time );
 }
 
+void Dtime::configureTimeServer()
+{
+  KProcess proc;
+  proc << "/sbin/yast2" << "ntp-client";
+  proc.start( KProcess::DontCare );
+}
+
 TQString Dtime::quickHelp() const
 {
   return i18n("<h1>Date & Time</h1> This control module can be used to set the system date and"
